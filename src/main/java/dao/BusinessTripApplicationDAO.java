package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import bean.Step1Data;

/**
 * {@code BusinessTripApplicationDAO} は、出張申請（business_trip_application テーブル）に関する
 * 登録処理を提供するDAOクラスです。
 * <p>
 * 申請ヘッダーに紐づく出張の開始日・終了日・プロジェクト・報告などの基本情報を保存する役割を持ちます。
 * 【Generated by ChatGPT】
 */
public class BusinessTripApplicationDAO {
	/**
     * {@link Step1Data} の内容をもとに出張申請データをデータベースへ登録し、
     * 自動採番された出張申請ID（主キー）を返します。
     * <p>
     * 日付の整形処理（"/" → "-"）や、申請ヘッダーとの紐づけも含まれます。
     * (Chèn thông tin cơ bản của chuyến đi vào DB và trả về ID được tạo)
     *
     * @param step1Data 出張申請画面の入力情報を保持するデータオブジェクト
     * @param applicationId 紐づける申請ヘッダーのID（application_headerテーブルの主キー）
     * @param conn トランザクション内で利用するデータベース接続
     * @return 登録された出張申請ID
     * @throws SQLException SQL実行時にエラーが発生した場合
     * 【Generated by ChatGPT】
     */
	public int insert(Step1Data step1Data, int applicationId, Connection conn) throws SQLException {
	    String sql = "INSERT INTO business_trip_application (application_id, start_date, end_date, project_code, report, total_days) VALUES (?, ?, ?, ?, ?, ?)";
	    try (PreparedStatement ps = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
	        ps.setInt(1, applicationId);
	        
	        // Thay thế '/' bằng '-' trước khi gọi valueOf
	        ps.setDate(2, Date.valueOf(step1Data.getStartDate().replace('/', '-')));
	        ps.setDate(3, Date.valueOf(step1Data.getEndDate().replace('/', '-')));

	        ps.setString(4, step1Data.getProjectCode());
	        ps.setString(5, step1Data.getTripReport());
	        ps.setInt(6, step1Data.getTotalDays());

            if (ps.executeUpdate() == 0) {
                throw new SQLException("出張申請の作成に失敗しました。");
            }

            try (ResultSet generatedKeys = ps.getGeneratedKeys()) {
                if (generatedKeys.next()) {
                    return generatedKeys.getInt(1);
                } else {
                    throw new SQLException("出張申請IDの取得に失敗しました。");
                }
            }
        }
    }
}